Using ``matrix_divided``

Matrix data must be only int/float type.
div can't be '0', and only int/float type.

***********************************************************************

First import ``matrix_divided``

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

***********************************************************************

#testing list and int
>>> (matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


#testing list with float
>>> matrix_divided([[1.2, 2.2, 3.2], [4.2, 5.2, 6.2]], 1.2)
[[1.0, 1.83, 2.67], [3.5, 4.33, 5.17]]


#testing negative lists with positive number
>>> matrix_divided([[-1.5], [-2.5]],2.5)
[[-0.6], [-1.0]]


#testing int list with negative number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]


#testing dividing list with large number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3333)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


#testing empty list
>>> (matrix_divided(None, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


#testing one empty list in lists
>>> matrix_divided([[3,4,6], []], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


#testing empty matrix with int
>>> (matrix_divided([], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


#testing different sizes of list with int
>>> matrix_divided([[1, 2], [4, 5, 6]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


#testing different types in a list
>>> matrix_divided([[1, 2, '3'], ['True', 8, 7]], 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


#testing matrix of list and tuple
>>> matrix_divided([(1, 2, 3), ['True', 8, 7]], 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


#testing dividing matrix with string
>>> (matrix_divided([[1, 2, 3], [4, 5, 6]], "3"))
Traceback (most recent call last):
...
TypeError: div must be a number


#testing dividing matrix with zero
>>> (matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero


#testing with one missing argument
>>> (matrix_divided([[1, 2, 3], [4, 5, 6]]))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'


#testing with both missing argument
>>> (matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


#testing list of int and list
>>> (matrix_divided([[1, 2, 3], [4, 5, 6]], 5, 3))
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given


