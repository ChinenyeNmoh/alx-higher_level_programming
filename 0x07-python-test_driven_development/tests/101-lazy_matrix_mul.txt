First import ``lazy_matrix_mul``
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul



#testing with lists of list with int
>>> lazy_matrix_mul([[5, 3, 4, 2], [8, 1, 0, 3]],[[1, 4, 0], [5, 3, 7], [0, 9, 5], [5, 1, 4]])
array([[30, 67, 49],
       [28, 38, 19]])


#testing with lists of list with float
>>> lazy_matrix_mul([[5.2, 3.2, 4.2, 2.2], [8.2, 1.2, 0.2, 3.2]], [[1.2, 4.2, 0.2], [5.2, 3.2, 7.2], [0.2, 9.2, 5.2], [5.2, 1.2, 4.2]])
array([[35.16, 73.36, 55.16],
       [32.76, 43.96, 24.76]])

>>> lazy_matrix_mul([[5, 3, -4, -2], [8, -1, 0, -3]],[[1, 4, 0], [-5, 3, 7], [0, -9, 5], [5, 1, 4]])
array([[-20,  63,  -7],
       [ -2,  26, -19]])


#testing with with no argument
>>> lazy_matrix_mul()
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'


>>> print(lazy_matrix_mul('m_a'))
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'


#testing if rows in m_b doesn't have same size
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1], [3, 4]])
Traceback (most recent call last): 
...
ValueError: setting an array element with a sequence.


#testing m_a with int and string
>>> lazy_matrix_mul([[1, 2], ['8', 4]], [[1, 2], [3, 4]])
Traceback (most recent call last): 
...
TypeError: invalid data type for einsum


#testing if both m_a and m_b contains int/float
>>> lazy_matrix_mul([[1, "non-number"]], [[{"a": 1}, 8.8]])
Traceback (most recent call last):
TypeError: Object arrays are not currently supported


#testing if m_b has only int/float
>>> lazy_matrix_mul([[1, 2], [3, 4]], [['0', 2], [3, 4]])
Traceback (most recent call last): 
...
TypeError: invalid data type for einsum



#testing if lists in m_b is empty
>>> lazy_matrix_mul([[9, 2], [3, 1]], [[], [3, 4]])
Traceback (most recent call last):    
...
ValueError: setting an array element with a sequence.


#testing if m_b is a list
>>> lazy_matrix_mul([[1, 2], [3, 4]], '9')
Traceback (most recent call last): 
...
ValueError: Scalar operands are not allowed, use '*' instead



#testing if m_a is a list
>>> lazy_matrix_mul('9', [[1, 2], [3, 4]])
Traceback (most recent call last):
...
ValueError: Scalar operands are not allowed, use '*' instead


#testing if m_b and m_b are lists
>>> lazy_matrix_mul('8', '9')
Traceback (most recent call last):
...
ValueError: Scalar operands are not allowed, use '*' instead



#testing if m_a is empty
>>> lazy_matrix_mul([[], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last): 
...
ValueError: setting an array element with a sequence.



#testing if m_a is a list of list
>>> print(lazy_matrix_mul([[1, "non-number"]], [[3, 4]]))
Traceback (most recent call last):
...
ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)
